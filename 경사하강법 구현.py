# -*- coding: utf-8 -*-
"""2. 경사하강법 구현_제출용.ipynb의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A5wNqWLDfct5m75HjJ94weCtPRugVzt8

# [코드리뷰 프로젝트] 2. 경사하강법 구현

## 1. 경사하강법
- 선형 회귀 모델을 구현하기 위한 데이터를 확인하고, 알맞은 형태로 분리합니다.
- 분리한 데이터를 활용해 train, weight, bias를 정의합니다.
- 경사하강법 구현을 위한 학습 루프를 만들고, 100회 반복해 결과를 출력합니다.

### [TODO] 1_ 데이터 분리
"""

# 미션 : 아래와 같은 출력 결과가 나타나도록 코드를 작성해보세요.

##############################################
#### 코드리뷰 2-1. 알맞은 코드를 직접 작성해보세요! ####
##############################################

# 프로그램 실행 예시
# 출력 결과

# print(x_train, x_train.shape)
# [1. 2. 3. 4. 5. 6.] (6,)

# print(y_train, y_train.shape)
# [10. 20. 30. 40. 50. 60.] (6,)


import numpy as np

xy = np.array([[1., 2., 3., 4., 5., 6.],
              [10., 20., 30., 40., 50., 60.]])

## 코드시작 ##

x_train = xy[0]    # ... 에 알맞은 코드를 작성해보세요.

y_train = xy[1]    # ... 에 알맞은 코드를 작성해보세요.

## 코드종료 ##

print(x_train, x_train.shape)
print(y_train, y_train.shape)

"""### [TODO] 2_ train, weight, bias 정의"""

# 미션 : 아래와 같은 출력 결과가 나타나도록 코드를 작성해보세요.

##############################################
#### 코드리뷰 2-2. 알맞은 코드를 직접 작성해보세요! ####
##############################################

# 프로그램 실행 예시
# 출력 결과

# print(beta_gd, bias)
# [0.53764546] [0.71495179]    # randoma을 사용해 숫자를 만들어냈기 때문에, 출력결과는 다를 수 있습니다. 형태 위주로 확인해주세요.

## 코드시작 ##

beta_gd = np.random.rand(1)
bias = np.random.rand(1)

## 코드종료 ##

print(beta_gd, bias)

"""### [TODO] 3_ 경사하강법 구현"""

# 미션 : 위와 같은 출력 결과가 나타나도록 코드를 작성해보세요.

##############################################
#### 코드리뷰 2-3. 알맞은 코드를 직접 작성해보세요! ####
##############################################

np.random.seed(0)
beta_gd = np.random.rand(1)
bias = np.random.rand(1)

learning_rate = 0.001

## 코드시작 ##
for i in range(1000):
  pred = beta_gd * x_train + bias  # 예측 값 계산
  error = ((pred - y_train) ** 2).mean()  # 평균 제곱 오차 계산

  gd_w = ((pred - y_train) * 2 * x_train).mean()
  gd_b = ((pred - y_train) * 2).mean()

  beta_gd -= learning_rate * gd_w
  bias -= learning_rate * gd_b

  if i % 100 == 0 :
    # print(beta_gd)
    print('Epoch {:10d}/1000 cost : {:10f}, w: {:10f}, b: {:10f}'.format(i, error, beta_gd.item(), bias.item()))

"""## 2. 코드리뷰 프로젝트 제출하기

- 수행한 프로젝트 내용을 확인하고, 전체 코드를 파이썬 파일(.py)로 저장합니다.
- 다운로드 받은 .py 파일을 zip으로 압축 및 제출하여 수행여부를 증빙합니다.
- 이번 차시에 궁금한 점이 있다면, 본문에 내용을 함께 작성하여 제출할 수 있습니다.

ALL RIGHTS RESERVED. (C)NAVER Connect Foundation.
"""